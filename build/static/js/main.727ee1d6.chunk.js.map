{"version":3,"sources":["ui/loader/loader.module.scss","Description/Description.module.scss","UsersFilter/UsersFilter.module.scss","GroupsSearch/GroupsSearch.module.scss","BroBotList/BroBotList.module.scss","PostsParse/PostsParse.module.scss","UsersFilter/Filters/Filter/Filter.module.scss","GroupsCanPost/GroupsCanPost.module.scss","GroupsAdmins/GroupsAdmins.module.scss","App.module.scss","ui/CopyButton/CopyButton.module.scss","ParsGroupMembers/ParsGroupMembers.module.scss","GroupsCross/GroupsCross.module.scss","ParsePostActivity/ParsePostActivity.module.scss","style/style.module.scss","ui/NavBar/NavBar.module.scss","ui/CoutrySelect/CountrySelect.js","VK/VK.js","ui/CitySelect/CitySelect.js","ui/CopyButton/CopyButton.js","style/style.js","GroupsSearch/GroupsSearch.js","GroupsCanPost/GroupsCanPost.js","BroBotList/BroBotList.js","ParsGroupMembers/ParsGroupMembers.js","GroupsCross/GroupsCross.js","GroupsAdmins/GroupsAdmins.js","PostsParse/PostsParse.js","UsersFilter/Filters/Filter/Filter.js","UsersFilter/selectOptions.js","UsersFilter/UsersFilter.js","ParsePostActivity/ParsePostActivity.js","ui/NavBar/NavBar.js","Description/Description.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","CountrySelect","props","useState","countries","changeCountries","dropdownStyle","container","provided","state","width","borderColor","isFocused","control","backgroundColor","borderWidth","borderRadius","borderBottom","valueContainer","paddingLeft","singleValue","color","countriesOptions","length","map","country","value","id","label","title","useEffect","window","VK","Api","call","need_all","v","r","response","items","prevState","concat","htmlFor","options","styles","filter","obj","country_id","defaultValue","onChange","onSelect","method","params","Promise","resolve","reject","setTimeout","error","gid","a","async","offset","trim","group_id","cleanURL","count","callback","output","Math","groupsGetMembersCount","groupMembers","ceil","iterate","num","groupsGetMembers","forEach","group","push","console","log","arr","result","key","elem","undefined","q","fields","groupGetById","add","contacts","contact","getAllGroupById","groups","domain","owner_id","qparam","url","cleanPostParseUrl","extended","posts","item","from_id","users","filtersList","filters","statusUpdater","filterStatusUpdater","searchPool","finalPool","user","i","ifinish","istart","usersString","slice","join","usersList","user_ids","name_case","includes","sex","sexFilter","date","Date","currenYear","getFullYear","UserBDate","bdate","split","userAge","minAgeFilter","maxAgeFilter","cityFilter","city","countryFilter","relationFilter","relation","university_name","eduFilter","faculty_name","graduation","toString","minFollowersFilter","maxFollowersFilter","followers_count","can_write_private_message","canWriteFilter","is_closed","isClosedFilter","post","activities","activitiesCount","bank","link","indexOf","Number","item_id","type","likers","alert","error_msg","post_id","reposters","profiles","el","author","signer_id","final","parsePostActivity","qs","searchedUpdater","filteredUpdater","searchedGroups","prefiltered","city_id","sort","screen_name","isClosed","quickBase","arrOfStr","group_ids","res","gr","canPost","can_post","minMembers","maxMembers","members_count","currentGroupUpdater","membersCountUpdater","membersCount","iterGetMembers","Set","data","startsWith","CitySelect","cities","changeCities","getCities","citiesOptions","isCopied","setCopied","disabled","className","classes","CopyButton","onClick","Array","navigator","clipboard","writeText","then","GroupsSearch","document","setQ","setType","setCountry_id","setCity_id","setSort","setOutput","loading","setLoading","valid","setIsClosed","setCanPost","setMinMembers","setMaxMembers","searched","setSearched","filtered","setFiltered","sortOptions","groupTypeOptions","start","searchGroups","outRender","e","target","placeholder","selectedOption","find","name","checkgroup","checkbox","button","loader","GropsCanPost","changeState","changeFiltered","isValid","changeValid","isLoading","changeIsLoading","isFail","changeIsFail","textareaClass","textarea","event","filterGroups","fail","floor","clearTimeout","counter","copyButton","index","BroBotList","changeGroups","phrase","changePhrase","changeOutput","randomInteger","min","max","random","main","combine","str","ParsGroupMembers","currentGroup","setCurrentGroup","currentCount","setCurrentCount","starter","parseGroupMembers","resp","description","GroupsCross","showCount","setShowCount","setMin","showcrosses","rend","Object","keys","iteration","groupGetAllMembers","cross","GroupsAdmins","showAdv","setShowAdv","groupsAdmins","user_id","PostsParse","setGroups","deep","setDeep","setFilter","setIsLoading","selectOptions","labelSelect","getGroupPosts","Filter","enable","setEnable","titleblock","delFilter","addFilter","plus","children","selectRelationOptions","UsersFilter","setUsers","status","setStatus","filterStatus","setFilterStatus","setFiltersList","setSexFilter","setMinAgeFilter","setMaxAgeFilter","setCountryFilter","setCityFilter","setRelationFilter","setEduFilter","setMinFollowersFilter","setMaxFollowersFilter","setCanWriteFilter","setIsClosedFilter","filterName","outputRender","usr","radiolabel","numLabel","selectedValue","isMulti","val","textinput","getUsers","ParsePostActivity","setPost","setActivities","setActivitiesCount","settings","checked","inputNumber","parsePostsActivity","out","NavBar","showGroups","setShowGroups","showUsers","setShowUsers","showOthers","setShowOthers","ref","useOnclickOutside","groupsOptions","NavLink","to","usersOptions","othersOptions","buttonWraper","icon","Description","cards","card","App","loginStatus","Auth","login","getLoginStatus","setState","logo","src","this","LoginButton","authVk","path","component","exact","React","Component","Boolean","location","hostname","match","script","createElement","head","append","onload","init","apiId","ReactDOM","render","app","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.727ee1d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"loader\":\"loader_loader__2haVc\",\"load1\":\"loader_load1__11FuI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Description_main__H9I4V\",\"show\":\"Description_show__1NjHF\",\"description\":\"Description_description__12PqQ\",\"cards\":\"Description_cards__3aYKb\",\"card\":\"Description_card__3c3vh\",\"icon\":\"Description_icon__2O8Nj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"UsersFilter_main__20G8W\",\"radiolabel\":\"UsersFilter_radiolabel__1N4rT\",\"numLabel\":\"UsersFilter_numLabel__2b2Uw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GroupsSearch\":\"GroupsSearch_GroupsSearch__nr6yp\",\"dropdownContainer\":\"GroupsSearch_dropdownContainer__2hlxf\",\"control\":\"GroupsSearch_control__17rNi\",\"output\":\"GroupsSearch_output__3b9AB\",\"error\":\"GroupsSearch_error__3EGJT\",\"loading\":\"GroupsSearch_loading__2wD5t\",\"copyButton\":\"GroupsSearch_copyButton__1TRBW\",\"checkgroup\":\"GroupsSearch_checkgroup__XC1N-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"BroBotList_main__emIfY\",\"control\":\"BroBotList_control__1Z4Gw\",\"label\":\"BroBotList_label__34REi\",\"output\":\"BroBotList_output__37dFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"PostsParse_main__3Wjcl\",\"textarea\":\"PostsParse_textarea__1-XDL\",\"labelSelect\":\"PostsParse_labelSelect__31BT2\",\"button\":\"PostsParse_button__1jF3i\",\"output\":\"PostsParse_output__QwSc8\",\"error\":\"PostsParse_error__1Lo-y\",\"description\":\"PostsParse_description__20k_b\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"titleblock\":\"Filter_titleblock__1Aj0x\",\"add\":\"Filter_add__1K713\",\"plus\":\"Filter_plus__3RlOv\",\"children\":\"Filter_children__12KZ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"GroupsCanPost_container__1WUAt\",\"counter\":\"GroupsCanPost_counter__1phOR\",\"result\":\"GroupsCanPost_result__3p9RY\",\"error\":\"GroupsCanPost_error__1-OsE\",\"copyButton\":\"GroupsCanPost_copyButton__3kxpC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"GroupsAdmins_main__9cmxh\",\"textarea\":\"GroupsAdmins_textarea__lkIPY\",\"button\":\"GroupsAdmins_button__2geaZ\",\"output\":\"GroupsAdmins_output__3qYM5\",\"error\":\"GroupsAdmins_error__1JnD6\",\"description\":\"GroupsAdmins_description__5Del9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__15LM-\",\"logo\":\"App_logo__2qPv-\",\"NavLink\":\"App_NavLink__vrTgO\",\"LoginButton\":\"App_LoginButton__2Ofwc\",\"App-logo\":\"App_App-logo__1GLNd\",\"App-header\":\"App_App-header__3nnPn\",\"App-link\":\"App_App-link__TRj1P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CopyButton\":\"CopyButton_CopyButton__2uxKq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"ParsGroupMembers_main__3DF4R\",\"output\":\"ParsGroupMembers_output__1SR0I\",\"error\":\"ParsGroupMembers_error__1I6Fp\",\"description\":\"ParsGroupMembers_description__1FvXI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"GroupsCross_main__31Txs\",\"textarea\":\"GroupsCross_textarea__yzf10\",\"button\":\"GroupsCross_button__3ehGE\",\"output\":\"GroupsCross_output__33I8i\",\"error\":\"GroupsCross_error__sR414\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"ParsePostActivity_settings__aef4z\",\"inputNumber\":\"ParsePostActivity_inputNumber__2rt0g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__1Tt6W\",\"description\":\"style_description__2Pm-h\",\"button\":\"style_button__3OSUH\",\"textarea\":\"style_textarea__1i9Py\",\"checkbox\":\"style_checkbox__2MxzV\",\"label\":\"style_label__3E9L9\",\"textinput\":\"style_textinput__21hnL\",\"output\":\"style_output__2bHKd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavBar\":\"NavBar_NavBar__tuXPa\",\"buttonWraper\":\"NavBar_buttonWraper__3vfDm\",\"button\":\"NavBar_button__2vzoi\",\"icon\":\"NavBar_icon__2avCd\",\"options\":\"NavBar_options__16pC6\",\"show\":\"NavBar_show__1Mudm\",\"NavLink\":\"NavBar_NavLink__1oHG3\"};","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select';\n\n\nconst CountrySelect = props => {\n\n   let [countries, changeCountries] = useState([])\n\n   const dropdownStyle = {\n    container: (provided, state) => ({\n        ...provided,\n        width: '285px',\n        borderColor: state.isFocused ? '#008000' : '#008000'\n    }),\n    control: (provided, state) => ({\n        ...provided,\n        backgroundColor: 'transparent',\n        borderWidth: '0',\n        borderRadius: '0',\n        borderBottom: '1px solid #008000',\n    \n    }),\n    valueContainer: (provided, state) => ({\n        ...provided,\n        paddingLeft: '0px',\n        \n    }),\n    singleValue: (provided, state) => ({\n        ...provided,\n        color: '#121212cc',\n        \n    }),\n  }\n\n   const countriesOptions = countries.length > 0 ? countries.map(country=>({value:country.id, label:country.title})) : []\n\n    useEffect(()=>{\n        if (countries.length === 0) {\n        window.VK.Api.call('database.getCountries', {need_all: 0, v:'5.73'}, (r)=>{\n            if(r.response){\n                changeCountries(r.response.items)\n                changeCountries(prevState=>prevState.concat({id: '', title: 'Не важно'}))\n            } \n        })\n    }\n    })\n\n    return (\n        <>\n        <label htmlFor='country_id' >Укажите страну\n        <Select \n            options={countriesOptions}\n            styles={dropdownStyle}\n            value={countriesOptions.length > 0 ? countriesOptions.filter(obj=>obj.value === props.country_id)[0] : {value: '', label: 'Не важно'}}\n            defaultValue={{value: '', label: 'Не важно'}}\n            onChange={props.onSelect}\n        />\n        \n        </label>\n    \n\n\n        </>\n\n    )\n}\n\nexport default CountrySelect","let VK = {}\n\nVK.call = function (method, params) {\n    return new Promise((resolve, reject)=>{\n        setTimeout(()=>{\n            window.VK.Api.call(method, params, (r)=>{\n                if (r.response) {\n                    resolve(r.response)\n                } else {\n                    reject(r.error)\n                }\n            })\n        }, 300)\n        \n    })\n}\n\nVK.groupsGetMembers = async (gid, offset = 0) => {\n    if (gid.trim() == ' ' || gid.trim() === '' || gid == '\\n') return []\n    let response = await VK.call('groups.getMembers', {group_id: cleanURL(gid), offset:offset, v:'5.73'})\n    return(response.items)\n}\n\n\nVK.groupsGetMembersCount = async (gid, offset = 0) => {\n    if (gid.trim() == ' ' || gid.trim() === '' || gid == '\\n') return 0\n    let response = await VK.call('groups.getMembers', {group_id: cleanURL(gid), offset:offset, v:'5.120'})\n    return(response.count)\n}\n\nVK.groupGetAllMembers = async (gid, callback) => {\n    let output = []\n\n    let groupMembers = Math.ceil(await VK.groupsGetMembersCount(gid) / 1000)\n\n    let iterate =  async (num) =>{ \n            if (num < groupMembers) {\n                let result = await VK.groupsGetMembers(gid, num*1000)\n                result.forEach((group)=>{\n                    output.push(group)\n                })\n                console.log(output)\n                iterate(num+1)\n            } else {\n                return callback(output)\n            }     \n   }\n\n   await iterate(0)\n\n}\n\n\nVK.cross = (arr, num) =>{\n    let result = {}\n\n    arr.forEach(elem => {\n        if (result[elem] !== undefined) {\n            result[elem] = result[elem] + 1\n        } else {\n            result[elem] = 1\n        } \n    });\n\n    for (let key in result) {\n        if (result[key] < num) {\n            delete result[key]\n        }\n    }  \n    \n    return result\n}\n\nVK.groupGetById = async (group) => {\n    console.log(group)\n   if (group.trim() == ' ' || group.trim() === '' || group == '\\n') return 0\n   let q = cleanURL(group)\n   let result = await VK.call('groups.getById', {group_id: q, fields:'contacts', v:'5.73'})\n   return result\n}\n\n\nVK.getAllGroupById = async (arr, callback) => {\n    let result = []\n\n\n    let iterate = async (num) => {\n        if (num === arr.length) {\n           callback(result)\n        } else {\n            let add = await VK.groupGetById(arr[num])\n            if(add[0] !== undefined && add[0].contacts) {\n                add[0].contacts.forEach(contact=>result.push(contact))\n            }\n            iterate(num+1)\n            console.log(num)\n        }\n\n    }\n\n    iterate(0)\n        \n}\n\nVK.groupsAdmins = async (arr, callback) => {\n    await VK.getAllGroupById(arr, (result)=>{\n        callback(result)\n    })\n\n\n}\n\nVK.getGroupPosts = async (groups, params) => {\n    let container = []\n\n    for (let group of groups) {\n        let domain\n        let owner_id\n        let qparam\n\n        let url = cleanPostParseUrl(group)\n\n        if(typeof(url) === 'number') {\n            owner_id = url\n        } else {\n            domain = url\n        }\n\n        if (domain && !owner_id) {\n            qparam = {domain, count: params.count, filter: params.filter, extended: 1, fields: 'screen_name',  v:'5.73'}\n        } else if (owner_id && !domain) {\n            qparam = {owner_id, count: params.count, filter: params.filter, extended: 1, fields: 'screen_name',  v:'5.73'}\n        } else if (domain && owner_id) {\n            qparam = {domain, owner_id, count: params.count, filter: params.filter, extended: 1, fields: 'screen_name',  v:'5.73'}\n        }\n\n        try {\n            let posts = await VK.call('wall.get', qparam)\n            for (let item of posts.items) {\n            let url = `${group}?w=wall${item.from_id}_${item.id}`\n            container = container.concat(url)\n            } \n        } catch (error) {\n            console.log('err', error)\n        }\n        \n    }\n\n    return container\n}\n\nVK.getUsers = async (users, filtersList, filters, statusUpdater, filterStatusUpdater) => {\n    let searchPool = []\n    let finalPool = []\n    users = users.map(user=>(cleanURL(user)))\n\n    if (users.length > 500) {\n      for (let i = 0; i < Math.ceil(users.length / 500); i++) {\n        let istart = i*500;\n        let ifinish = istart+500;\n        let usersString = users.slice(istart, ifinish).join(',')\n        searchPool = searchPool.concat(usersString)\n        }  \n    } else {\n        let usersString = users.join(',')\n        searchPool.push(usersString)\n    }\n\n    for (let usersList of searchPool) {\n        const result = await VK.call('users.get', {user_ids: usersList, fields: 'is_closed, screen_name,sex, bdate, country, city, relation, education, followers_count, can_write_private_message', name_case: 'nom', v: '5.89'})\n        finalPool = finalPool.concat(result)\n        statusUpdater(finalPool.length)\n    } \n\n\n//Фильтрация\n        if (filtersList.includes('sexFilter')) {\n            finalPool = finalPool.filter(user=>user.sex === filters.sexFilter)\n            filterStatusUpdater(finalPool.length)\n        }\n\n        if (filtersList.includes('ageFilter')) {\n            const date = new Date()\n            const currenYear = date.getFullYear()\n\n            finalPool = finalPool.filter(user=>{\n               const UserBDate = user.bdate ? user.bdate.split('.') : null\n               if (UserBDate && UserBDate[2]) {\n                   let userAge = currenYear - UserBDate[2]\n                   if (userAge > filters.minAgeFilter && userAge < filters.maxAgeFilter) {\n                       return true\n                   } else {\n                       return false\n                   }\n               } else {\n                   return false\n               }\n            })\n            filterStatusUpdater(finalPool.length)\n\n        }\n\n        if (filtersList.includes('geoFilter')) {\n            finalPool = finalPool.filter(user=>{\n                if (filters.cityFilter) {\n                    return user.city ? user.city.id == filters.cityFilter : false\n                }\n                if (filters.countryFilter) {\n                    return user.country ? user.country.id == filters.countryFilter : false\n                }\n                \n\n            })\n            filterStatusUpdater(finalPool.length)\n\n        }\n\n        if (filtersList.includes('relationFilter')) {\n            finalPool = finalPool.filter(user=>filters.relationFilter.includes(user.relation))\n            filterStatusUpdater(finalPool.length)\n\n        }\n\n        if (filtersList.includes('eduFilter')) {\n            finalPool = finalPool.filter(user=> \n                (user.university_name && user.university_name.includes(filters.eduFilter)) \n                || \n                (user.faculty_name && user.faculty_name.includes(filters.eduFilter)) \n                || \n                (user.graduation && user.graduation.toString().includes(filters.eduFilter)))\n            filterStatusUpdater(finalPool.length)\n\n        }\n\n        if (filtersList.includes('followersFilter')) {\n            finalPool = finalPool.filter(user=>{\n                if (filters.minFollowersFilter < filters.maxFollowersFilter) {\n                    return user.followers_count > filters.minFollowersFilter && user.followers_count < filters.maxFollowersFilter\n                } else if (filters.minFollowersFilter === filters.maxFollowersFilter) {\n                    return user.followers_count > filters.minFollowersFilter\n                } else if (filters.minFollowersFilter > filters.maxFollowersFilter) {\n                    return user.followers_count > filters.minFollowersFilter\n                }\n            })\n            filterStatusUpdater(finalPool.length)\n        }\n\n        if (filtersList.includes('canWriteFilter')) {\n            finalPool = finalPool.filter(user=>user.can_write_private_message === filters.canWriteFilter)\n            filterStatusUpdater(finalPool.length)\n        }\n\n        if (filtersList.includes('isClosedFilter')) {\n            finalPool = finalPool.filter(user=>user.is_closed === filters.isClosedFilter)\n            filterStatusUpdater(finalPool.length)\n        }\n\n        filterStatusUpdater(finalPool.length)\n\n\n        return finalPool\n\n    \n}\n\n\nVK.parsePostActivity = async (post, activities, activitiesCount) => {\n    console.log('actvcount', activitiesCount)\n    let bank = []\n\n    let link = post.slice(post.indexOf('w=wall')+6)\n    let owner_id = Number(link.slice(0, link.indexOf('_')))\n    let item_id = Number(link.slice(link.indexOf('_')+1))\n\n\n    if (activities.includes('likes')) {\n    try {\n        let likers = await VK.call('likes.getList', {type: 'post', owner_id: owner_id, item_id: item_id, count: 1000, v:'5.110'})\n        if (likers.items) {\n            bank = bank.concat(likers.items)\n        }\n    } catch (error) {\n        window.alert(error.error_msg)\n    }\n    }\n\n    if (activities.includes('reposts')) {\n        try {\n            let reposters = await VK.call('wall.getReposts', {owner_id: owner_id, post_id: item_id, count: 1000, v:'5.110'})\n            if (reposters.profiles) {\n                bank = bank.concat(reposters.profiles.map(el=>el.id))\n            }\n        } catch (error) {\n            window.alert(error.error_msg)\n        }\n    }\n\n    if (activities.includes('authors')) {\n        try {\n            let author = await VK.call('wall.getById', {posts: link, v:'5.110'})\n            if (author[0].signer_id) {\n                bank = bank.concat(author[0].signer_id)\n            }\n        } catch (error) {\n            window.alert(error.error_msg)\n        }\n    }\n\n\n    let result = {};\n\n    bank.forEach(function(a){\n    if (result[a] != undefined)\n        ++result[a];\n    else\n        result[a] = 1;\n    });\n\n    let final = []\n\n    for (let id in result) {\n\n        if (result[id] >= activitiesCount) {\n            final = final.concat(id)\n        }\n    }\n\n\n\n    return final\n\n    \n}\n\nVK.parsePostsActivity = async (posts, activities, activitiesCount) => {\n    let result = []\n\n    for (let post of posts) {\n        let items = await VK.parsePostActivity(post, activities, activitiesCount)\n        if (items) {\n           result = result.concat(items)\n        }\n    }\n\n    return result\n\n}\n\nVK.searchGroups = async (qs, params, filter, searchedUpdater, filteredUpdater) => {\n    let searchedGroups = []\n    let prefiltered = []\n\n    for (let q of qs) {\n        try {\n            let result = await VK.call('groups.search', {q, type: params.type, country_id: params.country_id, city_id: params.city_id, sort: params.sort, count: 1000, v: '5.115'})\n            searchedGroups.push(...result.items.map(item=>item.screen_name)) // В searchedGroups идут только названия\n        } catch (error) {\n            window.alert(error.error_msg)\n        } \n        searchedUpdater(searchedGroups.length) //Обновление кол-ва найденных групп\n    }\n\n    if (searchedGroups.length > 0) {\n        prefiltered = searchedGroups //Копия найденных групп\n\n        if (filter.isClosed) {\n            let quickBase = [] //Временный массив\n            let arrOfStr = [] // Массив из строк по 500 шт\n            for (let i = 0; i < Math.ceil(prefiltered.length); i = i+500) { //\n                arrOfStr.push(prefiltered.slice(i, i+500))                  //\n            }                                                               //\n            for (let group_ids of arrOfStr) {\n                let res = await VK.call('groups.getById', {group_ids, fields: 'is_closed', v:'5.115'})\n                quickBase.push(...res.filter(gr=>gr.is_closed === 0).map(gr=>gr.screen_name)) //Только названия\n            }\n            prefiltered = quickBase\n        }\n\n        filteredUpdater(prefiltered.length)\n\n        if (filter.canPost) {\n            let quickBase = [] //Временный массив\n            let arrOfStr = [] // Массив из строк по 500 шт\n            for (let i = 0; i < Math.ceil(prefiltered.length); i = i+500) { //\n                arrOfStr.push(prefiltered.slice(i, i+500))                  //\n            }                                                               //\n            for (let group_ids of arrOfStr) {\n                let res = await VK.call('groups.getById', {group_ids, fields: 'can_post', v:'5.115'})\n                quickBase.push(...res.filter(gr=>gr.can_post === 1).map(gr=>gr.screen_name)) //Только названия\n            }\n            prefiltered = quickBase\n        }\n\n        filteredUpdater(prefiltered.length)\n\n        if (filter.minMembers > 0 || filter.maxMembers > 0) {\n            let quickBase = [] //Временный массив\n            let arrOfStr = [] // Массив из строк по 500 шт\n            for (let i = 0; i < Math.ceil(prefiltered.length); i = i+500) { //\n                arrOfStr.push(prefiltered.slice(i, i+500))                  //\n            }                                                               //\n            for (let group_ids of arrOfStr) {\n                let res = await VK.call('groups.getById', {group_ids, fields: 'members_count', v:'5.115'})\n                quickBase.push(...res.filter(\n                    gr=>gr.members_count > filter.minMembers && (filter.minMembers < filter.maxMembers ? gr.members_count < filter.maxMembers : true)\n                    ).map(gr=>gr.screen_name)) //Только названия\n            }\n            prefiltered = quickBase\n        }\n\n\n        filteredUpdater(prefiltered.length)\n\n\n        return prefiltered\n\n\n    }\n\n}\n\n\nVK.iterGetMembers = async (group_id, offset) => {\n    try {\n        let res = await VK.call('groups.getMembers', {group_id, offset, sort: 'id_asc', fields: 'screen_name',  v:'5.120'})\n        return (res.items)\n    } catch (error) {\n        window.alert(error.error_msg)\n    }\n   \n}\n\n\nVK.parseGroupMembers = async (groups, currentGroupUpdater, membersCountUpdater) => {\n    let result = []\n    for (let group of groups) {\n        try {\n            let group_id = cleanURL(group)\n            currentGroupUpdater(group_id)\n            let res = await VK.call('groups.getMembers', {group_id, sort: 'id_asc', fields: 'screen_name',  v:'5.120'}) \n            let membersCount = Number(res.count)\n            for (let i=0; i < membersCount; i=i+1000) {\n                let response = await VK.iterGetMembers(group_id, i)\n                result = result.concat(response.map(user=>user.screen_name))\n                membersCountUpdater(result.length)\n            }\n        } catch (error) {\n            window.alert(error.error_msg)\n        }   \n    }\n\n    result = [...new Set(result)]\n\n    return result\n}\n\n\n\nlet cleanGroupParserUrl = data => {\n    if (data.startsWith('https://vk.com/')) {\n        return data.slice(15)\n    } else if (\n        data.startsWith('group') \n        || data.startsWith('club')\n        || data.startsWith('public')\n    ) {\n        return data\n    } else {\n        return null\n    }\n}\n\nlet cleanPostParseUrl = (data) => {\n    if (data.startsWith('https://vk.com/club')) {\n        return Number('-'+data.slice(19))\n    } else if (data.startsWith('https://vk.com/public')) {\n        return  Number('-'+data.slice(21))\n    } else if (data.startsWith('https://vk.com/group')){\n        return Number('-'+data.slice(20))\n    } else if (data.startsWith('https://vk.com/id')){\n        return Number(data.slice(17))\n    } else if (data.startsWith('https://vk.com/')){\n        return data.slice(15)\n    } else {\n        return data\n    }\n}\n\nlet cleanURL = (data) => {\n    if (data.startsWith('https://vk.com/club')) {\n        return data.slice(19)\n    } else if (data.startsWith('https://vk.com/public')) {\n        return  data.slice(21)\n    } else if (data.startsWith('https://vk.com/group')) {\n        return  data.slice(20)\n    } else if (data.startsWith('https://vk.com/')){\n        return data.slice(15)\n    } else if (data.startsWith('club')){\n        return data.slice(4)\n    } else {\n        return data\n    }\n}\n\n\n\n\nexport default VK","import React, { useState, useEffect } from 'react'\nimport Select from 'react-select'\nimport AsyncSelect from 'react-select/async';\n\nimport VK from '../../VK/VK'\n\nconst CitySelect = props => {\n\n   let [cities, changeCities] = useState([])\n   \n   const dropdownStyle = {\n    container: (provided, state) => ({\n        ...provided,\n        width: '285px',\n        borderColor: state.isFocused ? '#008000' : '#008000'\n    }),\n    control: (provided, state) => ({\n        ...provided,\n        backgroundColor: 'transparent',\n        borderWidth: '0',\n        borderRadius: '0',\n        borderBottom: '1px solid #008000',\n    \n    }),\n    valueContainer: (provided, state) => ({\n        ...provided,\n        paddingLeft: '0px',\n        \n    }),\n    singleValue: (provided, state) => ({\n        ...provided,\n        color: '#121212cc',\n        \n    }),\n  }\n\n   let getCities = (props) => {\n\n            window.VK.Api.call('database.getCities', {country_id: props.country_id, need_all: 0, count: 1000, v:'5.73'}, (r)=>{\n                if(r.response){\n                    changeCities(r.response.items)\n\n                } else {\n                    console.log('stmth goes wrong')\n                }\n            })\n       \n        \n    }\n\n\n    // let asyncLoadCities = async () => {\n    //     //return cities = await VK.call('database.getCities', {country_id: props.country_id, need_all: 0, count: 1000, v:'5.73'}).map(city=>({value:city.id, label:city.title}))\n    //     return new Promise((resolve, reject)=>{\n    //         setTimeout(()=>{\n    //             window.VK.Api.call('database.getCities', {country_id: props.country_id, need_all: 0, count: 1000, v:'5.73'}, (r)=>{\n    //                 if (r.response) {\n    //                     let results = r.response.items\n    //                     let optionsList = results.map(city=>({value:city.id, label:city.title}))\n    //                     resolve(optionsList)\n    //                 } else {\n    //                     reject(r.error)\n    //                 }\n    //             })\n    //         }, 300)\n            \n    //     })\n    // }\n\n    useEffect(()=>{\n        getCities(props)\n    }, [props.country_id, props.city_id])\n\n    console.log(cities)\n\n    let citiesOptions = cities.length > 0 ? cities.map(city=>({value:city.id, label:city.title})).concat({value: '', label: 'Не важно'}) : []\n\n    //let selectValue = citiesOptions.length > 0 ? citiesOptions.filter(obj=>obj.value === props.city_id)[0] : {value: '', label: 'Не важно'}\n\n    return (\n        <>\n        <label htmlFor='city_id'>Укажите город \n        <Select \n          options={citiesOptions}\n          styles={dropdownStyle}\n          //value={selectValue}\n          value={citiesOptions.length > 0 ? citiesOptions.filter(obj=>obj.value === props.city_id)[0] : {value: '', label: 'Не важно'}}\n          //defaultValue={{value: '', label: 'Не важно'}}\n          onChange={props.onSelect}\n        />\n\n        {/* <AsyncSelect\n          \n          //loadOptions={()=>{VK.call('database.getCities', {country_id: props.country_id, need_all: 0, count: 1000, v:'5.73'})}}\n          loadOptions={asyncLoadCities}\n          styles={dropdownStyle}\n          //value={citiesOptions.length > 0 ? citiesOptions.filter(obj=>obj.value === props.city_id)[0] : {value: '', label: 'Не важно'}}\n          //defaultValue={{value: '', label: 'Не важно'}}\n          onChange={props.onSelect}\n        />\n         */}\n        </label>\n\n        {/* {cities.length === 0 ? \n            <small>Сначала укажите страну</small>\n        :\n        \n            <select id=\"city_id\" onChange={props.onSelect} name='city_id' >\n\n                <option value='' key={'unic2'} >\n                    Не важно\n                </option>\n\n                {cities.map((country)=>{\n                    return (\n                        <option value={country.id} key={country.id} >\n                            {country.title}\n                        </option>\n                    )\n                })}\n            </select>\n        \n        \n        } */}\n\n\n\n        </>\n\n    )\n}\n\nexport default CitySelect","import React, { useState } from 'react'\nimport classes from './CopyButton.module.scss'\nimport {GrCopy, GrCheckmark} from 'react-icons/gr'\n\nexport default props => {\n\n   const [isCopied, setCopied] = useState(false)\n\n   const copy = () => {\n\n        let data = ''\n\n        if (props.output instanceof Array) {\n            props.output.map((group)=>{\n                if (group.screen_name) {\n                    data = data + \"https://vk.com/\" + group.screen_name + \"\\n\"\n                } else {\n                    if(typeof group === 'string' && group.includes('https://vk.com/')) {\n                        data = data + group + \"\\n\"\n                    } else {\n                        data = data + \"https://vk.com/\" + group+ \"\\n\"\n                    }\n                }\n            })\n        }\n        \n   \n        window.navigator.clipboard.writeText(data)\n        .then(()=>{\n            console.log('copied')\n        })\n        .then(()=>{\n            setCopied(true)\n        })\n\n}   \n\n    return (\n        <>\n        {\n        isCopied ?\n        <button disabled className={classes.CopyButton}><GrCheckmark /></button> : \n        <button onClick={copy} className={classes.CopyButton}><GrCopy /></button> \n        }\n        \n        </>\n    )\n}","export const dropdownStyle = {\n    container: (provided, state) => ({\n        ...provided,\n        width: '285px',\n        borderColor: state.isFocused ? '#008000' : '#008000'\n    }),\n    control: (provided, state) => ({\n        ...provided,\n        backgroundColor: 'transparent',\n        borderWidth: '0',\n        borderRadius: '0',\n        borderBottom: '1px solid #008000',\n    \n    }),\n    valueContainer: (provided, state) => ({\n        ...provided,\n        paddingLeft: '0px',\n        \n    }),\n    singleValue: (provided, state) => ({\n        ...provided,\n        color: '#121212cc',\n        \n    }),\n  }","import React, { useState } from 'react'\nimport CountrySeclect from '../ui/CoutrySelect/CountrySelect'\nimport CitySelect from '../ui/CitySelect/CitySelect'\nimport classes from './GroupsSearch.module.scss'\nimport loader from '../ui/loader/loader.module.scss'\nimport CopyButton from '../ui/CopyButton/CopyButton'\nimport styles from '../style/style.module.scss'\nimport Select from 'react-select';\nimport {dropdownStyle} from '../style/style'\nimport VK from '../VK/VK'\n\nexport const GroupsSearch = () => {\ndocument.title = 'Поиск групп по параметрам'\n    \n\n    const [q, setQ] = useState([])\n    const [type, setType] = useState('')\n    const [country_id, setCountry_id] = useState('')\n    const [city_id, setCity_id] = useState('')\n    const [sort, setSort] = useState(0)\n\n    const [output, setOutput] = useState([])\n    const [loading, setLoading] = useState(false)\n\n    const [valid, setValid] = useState(true)\n\n\n    const [isClosed, setIsClosed] = useState(false)\n    const [canPost, setCanPost] = useState(false)\n\n    const [minMembers, setMinMembers] = useState(0)\n    const [maxMembers, setMaxMembers] = useState(0)\n\n    const [searched, setSearched] = useState(0)\n    const [filtered, setFiltered] = useState(0)\n\n\n\n    const searchedUpdater = (num) => {\n        setSearched(num)\n    }\n\n    const filteredUpdater = (num) => {\n        setFiltered(num)\n    }\n\n\n\n    const sortOptions = [\n        {value:0, label: 'Cортировать по умолчанию (аналогично результатам поиска в полной версии сайта)'},\n        {value:1, label: 'Cортировать по скорости ростa'},\n        {value:2, label: 'Cортировать по отношению дневной посещаемости к количеству пользователей'},\n        {value:3, label: 'Cортировать по отношению дневной посещаемости к количеству пользователей'},\n        {value:4, label: 'Cортировать по отношению количества комментариев к количеству пользователей'},\n        {value:5, label: 'Cортировать по отношению количества записей в обсуждениях к количеству пользователей'}\n    ]\n\n    const groupTypeOptions = [\n        {value:'', label:\"Не важно\"},\n        {value:'group', label:\"Группа\"},\n        {value:'page', label:\"Паблик\"},\n        {value:'event', label:\"Событие\"},\n    ]\n\n    const start = async ()=>{\n        setLoading(true)\n        const params = {type, country_id, city_id, sort}\n        const filters = {canPost, minMembers, maxMembers, isClosed}\n        const res = await VK.searchGroups(q, params, filters, searchedUpdater, filteredUpdater)\n        setOutput(res)\n        setLoading(false)\n    }\n\n\n    const searchGroups = async () => {\n        if (q.length > 0) {\n            if (output.length === 0) {\n               start()\n            } else {\n                setOutput([])\n                setSearched(0)\n                setFiltered(0)\n\n                start()\n            }\n        }\n    }\n\n    const outRender = (\n        <div className={styles.output}>\n            <CopyButton \n                output={output}\n            />\n            {output ? output.map((gr, i)=>(\n                <div key={i}>https://vk.com/{gr}</div>\n            )) : null}\n        </div>\n    )\n\n\n        return (\n          <div className={classes.GroupsSearch}>\n            <div className={classes.control}>\n              <input\n                className={valid}\n                id=\"q\"\n                onChange={(e) => setQ(e.target.value.split(\",\"))}\n                placeholder=\"Ключевые слова\"\n              />\n            </div>\n\n            <div className={classes.control}>\n              <label htmlFor=\"selecttype\">\n                Тип сообщества\n                <Select\n                  options={groupTypeOptions}\n                  styles={dropdownStyle}\n                  onChange={(selectedOption) => {\n                    setType(selectedOption.value);\n                  }}\n                  value={groupTypeOptions.find((obj) => obj.value === type)}\n                />\n              </label>\n            </div>\n\n            <div className={classes.control}>\n              <CountrySeclect\n                country_id={country_id}\n                onSelect={(selectedOption) => {\n                  setCountry_id(selectedOption.value);\n                  setCity_id(\"\");\n                }}\n              />\n            </div>\n\n            {country_id === \"\" ? null : (\n              <div className={classes.control}>\n                <CitySelect\n                  country_id={country_id}\n                  city_id={city_id}\n                  onSelect={(selectedOption) => {setCity_id(selectedOption.value)}}\n                />\n              </div>\n            )}\n\n            <div className={classes.control}>\n              <label htmlFor=\"sort\">\n                Сортировка по:\n                <Select\n                  styles={dropdownStyle}\n                  options={sortOptions}\n                  value={sortOptions.find((obj) => obj.value === sort)}\n                  onChange={(selectedOption) => {setSort(selectedOption.value)}}\n                />\n              </label>\n            </div>\n            <div className={classes.control}>\n              <label htmlFor=\"min\">Минимум участников:</label>\n              <input\n                type=\"number\"\n                id=\"min\"\n                name=\"min\"\n                placeholder={minMembers}\n                onChange={e => setMinMembers(e.target.value)}\n              />\n            </div>\n\n            <div className={classes.control}>\n              <label htmlFor=\"max\">Максимум участников:</label>\n              <input\n                type=\"number\"\n                id=\"max\"\n                name=\"max\"\n                placeholder={maxMembers}\n                onChange={e=>setMaxMembers(e.target.value)}\n              />\n            </div>\n\n            <div className={classes.checkgroup}>\n              <input\n                type=\"checkbox\"\n                className={styles.checkbox}\n                onChange={() => {setIsClosed(!isClosed)}}\n              />\n\n              <label className={styles.label} htmlFor=\"canPost\">\n                Только открытые группы\n              </label>\n            </div>\n\n            <div className={classes.checkgroup}>\n              <input\n                type=\"checkbox\"\n                className={styles.checkbox}\n                onChange={() => {setCanPost(!canPost)}}\n              />\n\n              <label className={styles.label} htmlFor=\"canPost\">\n                Только с открытой стеной\n              </label>\n            </div>\n\n            {loading ? null : (\n              <div>\n                <button className={styles.button} onClick={searchGroups}>\n                  {\" \"}\n                  Найти группы{\" \"}\n                </button>\n              </div>\n            )}\n\n            <div>\n            {searched > 0 ? <p>Найденно сообществ: {searched}</p> :  null}\n            {filtered > 0 ? <p>Отфильтровано сообществ: {filtered}</p> :  null}\n            </div>\n\n           {loading ? <div className={loader.loader}/> : null}\n\n           {output && output.length > 0 ? outRender : null}\n            \n          </div>\n        );\n    \n    \n\n\n\n\n}","import React, { useState } from 'react'\nimport classes from './GroupsCanPost.module.scss'\nimport loader from '../ui/loader/loader.module.scss'\nimport CopyButton from '../ui/CopyButton/CopyButton'\nimport styles from '../style/style.module.scss'\n\nconst GropsCanPost = () => {\n    document.title = 'Сортировка групп по открытой стене'\n\n   const [state, changeState] = useState([])\n   const [filtered, changeFiltered] = useState([])\n   const [isValid, changeValid] = useState(true)\n   const [isLoading, changeIsLoading] = useState(false)\n   const [isFail, changeIsFail] = useState(false)\n\n\n   let filterGroups = (r) => {\n\n        \n\n        if (state.length > 0) {\n            \n            let fail = setTimeout(()=>{\n                if (filtered.length === 0) {\n                    changeIsLoading(false)\n                    changeValid(false)\n                    changeIsFail(true)\n                }\n            }, 5000)\n\n            if (filtered.length === 0 || r === 'repeat') {\n\n                \n\n                changeIsLoading(true)\n                changeValid(true)\n                for (let i = 0; i < Math.floor(state.length / 500); i++) {\n                    let istart = i*500;\n                    let ifinish = istart+500;\n                    let groups = state.slice(istart, ifinish).join(',')\n\n\n                    window.VK.Api.call('groups.getById', {group_ids: groups, fields: 'can_post', v:'5.73' }, (r)=>{\n                        if (r.response) {\n                            clearTimeout(fail)\n                            if (i = Math.floor(state.length / 500)) { // TEST TEST TEST\n                                changeIsLoading(false)\n                            }                 \n                            r.response.map((group)=>{\n                                if (group.can_post === 1) {\n                                    changeFiltered((prevState)=>prevState.concat(group))\n                                    changeIsFail(false)\n                                }\n                            })\n                        } else {\n                            console.log('r response ne prishel')\n                            setTimeout(()=>{filterGroups()}, 1000) //TEST TEST TEST\n                            \n                        }\n                    })\n                }\n\n            } else {\n                changeFiltered([])\n                setTimeout(()=>{filterGroups('repeat')}, 0)\n                \n            }\n\n            \n\n        } else {\n            changeValid(false)\n        }\n\n   }\n\n   let textareaClass = isValid? styles.textarea : classes.error + ' ' + styles.textarea\n\n\n    return(\n        <div className={classes.container}>\n            <label htmlFor='initialGroups'>Вставьте группы, которые нужно отсортировать по открытой стене</label>\n            <textarea \n                className={textareaClass}\n                id='initialGroups'\n                name='initialGroups' \n                onChange={event=>{\n                    changeState(event.target.value.split('\\nhttps://vk.com/'))\n                }}\n                />\n\n                {isLoading ? \n                    <div className={loader.loader}></div> :\n                    <button className={styles.button} onClick={filterGroups} >Отсортировать</button>\n                }\n            \n            \n            {filtered.length === 0  ? null :\n            <>\n            <h3 className={classes.counter} >Всего групп с открытой стеной получено: {filtered.length}</h3>\n            <div className={classes.result}> \n                <CopyButton className={classes.copyButton} output={filtered} >Скопировать все</CopyButton>\n                {filtered.map((group, index)=>{\n                    return (\n                        <div key={index} >\n                        {'https://vk.com/'+group.screen_name}\n                        </div>\n                    )\n                \n            })}\n\n            \n            \n            </div> \n            </>\n            }\n\n            { state.length > 0 && filtered.length === 0 && isLoading === false && isFail ? <p>Ничего не найдено</p> : null}\n            \n\n\n        </div>\n    )\n}\n\n\nexport default GropsCanPost\n\n","import React, { useState } from 'react'\nimport classes from './BroBotList.module.scss'\nimport CopyButton from '../ui/CopyButton/CopyButton'\nimport styles from '../style/style.module.scss'\n\nlet BroBotList = () => {\n   document.title = 'Сформировать список для БроБота'\n\n   const [groups, changeGroups] = useState([])\n   const [phrase, changePhrase] = useState([])\n   const [output, changeOutput] = useState([])\n\n  function randomInteger(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n   let combine = () => {\n       let final = []\n        for (let i=groups.length-1; i>=0; i--) {\n            console.log(randomInteger(0, phrase.length-1))\n            let result = groups[i] + ' ' + phrase[randomInteger(0, phrase.length-1)] + ' [image:image.jpg]'\n            final.push(result)\n        }\n        changeOutput(final)\n   }\n\n\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.control}>\n            <label className={classes.label + ' ' + styles.label} htmlFor='groups'>Вставьте список групп</label>\n            <textarea className={styles.textarea}  onChange={(event)=>{\n                changeGroups(event.target.value.split('\\n'))\n                \n            }} id='groups' />\n            </div>\n\n            <div className={classes.control}>\n            <label className={styles.label}  htmlFor='phrase'>Вставьте список фраз</label>\n            <textarea className={styles.textarea}  onChange={(event)=>{\n                changePhrase(event.target.value.split('\\n'))\n            }} id='phrase' />\n            </div>\n\n            <div className={classes.control}>\n            <button\n            className={styles.button}\n            onClick={()=>combine()}\n            >Комбинировать</button>\n            </div>\n\n\n            <div className={classes.output}>\n            <CopyButton output={output} />\n                {output.length > 0 ? output.map((str, index)=>{\n                    return(\n                        <div key={index}>\n                            {str}\n                        </div>\n                    )\n                }) : null}\n            </div>\n\n\n\n\n        </div>\n    )\n}\n\nexport default BroBotList","import React, { useState, useEffect } from 'react'\nimport classes from './ParsGroupMembers.module.scss'\nimport loader from '../ui/loader/loader.module.scss'\nimport CopyButton from '../ui/CopyButton/CopyButton'\nimport styles from '../style/style.module.scss'\nimport VK from '../VK/VK'\n\nlet ParsGroupMembers = props => {\n    document.title = 'Все участники групп'\n\n    const [state, changeState] = useState([])\n    const [output, changeOutput] = useState([])\n    const [isValid, changeIsValid] = useState(true)\n    const [isLoading, changeIsLoading] = useState(false)\n\n    const [currentGroup, setCurrentGroup] = useState('')\n    const [currentCount, setCurrentCount] = useState('')\n\n    const starter = async () => {\n        changeIsLoading(true)\n        let resp = await VK.parseGroupMembers(state, setCurrentGroup, setCurrentCount)\n        changeOutput(resp)\n        setCurrentGroup('')\n        setCurrentCount('')\n        changeIsLoading(false)\n    }\n\n\n    const start = async () => {\n        if (output.length === 0) {\n            await starter()\n        } else {\n            changeOutput([])\n            setCurrentGroup('')\n            setCurrentCount('')\n            await starter()\n        }\n    }\n\n    return (\n        <div className={classes.main}>\n            <div className={styles.description}>Скрипт перебирает все указанные вами группы и собирает общий список подписчиков. <br/> Если пользователь состоит в нескольких группах, его id будет упомянут 1 раз. </div>\n            <label className={styles.label} htmlFor='textarea'>Список адресов сообществ по 1 ссылке на строку</label>\n            <textarea id='textarea' name='textarea' className={`${styles.textarea}`}\n                onChange={(e)=>{\n                    changeState(e.target.value.split('\\n'))\n                }}\n            />\n\n                {isLoading? null : \n                    <button className={styles.button} onClick={()=>start()} >Начать сбор</button>\n                }\n\n                {currentGroup ? <p>Сбор участников сообщества <b>{currentGroup}</b></p> : null}\n                {currentCount ? <p>Всего участников собрано <b>{currentCount}</b>  </p> : null}\n\n                \n                 {isLoading ? \n                    <div className={loader.loader} /> : null\n                    \n                }\n            \n                {output.length === 0 || isLoading ? \n                    null :\n                    <>\n                    <br></br>\n                    <label>Найдено уникальных участников: {output.length}</label>\n                    <div className={classes.output}>\n                    <CopyButton output={output.map(id=>'https://vk.com/'+id)} />\n                    {output.map((id, i)=>(\n                        <div key={i} >\n                           https://vk.com/{id}\n                        </div>\n                    ))}\n                    </div>\n                    </>\n                }\n\n            \n        </div>\n    )\n}\n\nexport default ParsGroupMembers","import React, { useState, useEffect } from 'react'\nimport classes from './GroupsCross.module.scss'\nimport loader from '../ui/loader/loader.module.scss'\nimport CopyButton from '../ui/CopyButton/CopyButton'\nimport VK from '../VK/VK'\nimport styles from '../style/style.module.scss'\n\nlet GroupsCross = props => {\n    document.title = 'Пересечения групп'\n\n    const [state, changeState] = useState([])\n    const [output, changeOutput] = useState({})\n    const [isLoading, changeIsLoading] = useState(false)\n    const [showCount, setShowCount] = useState(false)\n    const [min, setMin] = useState(2)\n\n    \n   let start = async () =>{\n        let result = []\n\n        let counter = 0\n        changeIsLoading(true)\n\n        \n        let iteration = async () => {\n            if (counter < state.length) {\n                await VK.groupGetAllMembers(state[counter], (output)=>{\n                        result.push(...output)\n                        counter += 1\n                        console.log(counter)\n                        iteration(counter)\n                    })\n                } else {\n                    changeOutput(VK.cross(result, min))\n                    changeIsLoading(false)\n                }\n        }\n        \n        iteration(counter)\n\n   }\n\n   let showcrosses = () => {\n       let rend = []\n       Object.keys(output).map(id=>rend.push('https://vk.com/id' + id + (showCount ? ' : ' + output[id]  : ' ')))\n       return rend\n   }\n\n\n    return (\n        <div className={classes.main}>\n            <div className={styles.description}>Скрипт перебирает все указанные вами группы и собирает общий список подписчиков. <br/> Если пользователь состоит в нескольких группах, он попадет в список. </div>\n            <label className={styles.label} htmlFor='textarea'>Список адресов сообществ по 1 ссылке на строку</label>\n            <textarea id='textarea' name='textarea' className={`${styles.textarea} HERE IS THE STYLE IF ERROR`}\n                onChange={(e)=>{\n                    changeState(e.target.value.split('\\n'))\n                }}\n            />\n                <label>\n                Пользователь состоит не менее, чем в <input type='number' value={min} onChange={(e)=>{setMin(e.target.value)}}/> группах\n                </label>\n\n                <label>\n                    <input type='checkbox' className={styles.checkbox} onChange={()=>setShowCount(!showCount)}/>\n                    Показать на сколько групп подписан пользователь\n                </label>\n            \n                {isLoading? null : \n                    <button className={styles.button} onClick={()=>start()} >Поиск</button>\n                }\n                \n                 {isLoading ?   \n                    <div className={loader.loader}></div> : null\n                    \n                }\n            \n                {Object.keys(output).length === 0 || isLoading ? \n                    null :\n                    <>\n                    <br></br>\n                    <label>Найдено участников: {Object.keys(output).length}</label>\n                    <div className={classes.output}>\n                    <CopyButton output={showcrosses()} />\n                    {showcrosses().map((str, index)=>{\n                        return (\n                            <div key={index} >\n                                {str}\n                            </div>\n                        )\n                    })}\n                    </div>\n                    </>\n                }\n\n            \n        </div>\n    )\n}\n\nexport default GroupsCross","import React, { useState } from 'react'\nimport classes from './GroupsAdmins.module.scss'\nimport loader from '../ui/loader/loader.module.scss'\nimport CopyButton from '../ui/CopyButton/CopyButton'\nimport VK from '../VK/VK'\n\nlet GroupsAdmins = props => {\n    document.title = 'Поиск администраторов групп'\n\n    const [state, changeState] = useState([])\n    const [output, changeOutput] = useState([])\n    const [isLoading, changeIsLoading] = useState(false)\n    const [showAdv, setShowAdv] = useState(false)\n\n    \n   let start = async () => {\n       changeIsLoading(true)\n       await VK.groupsAdmins(state, (response)=>{\n            changeOutput(response)\n            console.log(response)\n            changeIsLoading(false)\n       })\n   }\n        \n\n\n    return (\n        <div className={classes.main}>\n            <div className={classes.description}>Проверяет все сообщества из вашего списка, просматривает блок «Контакты» в каждом и собирает оттуда данные всех администраторов. <br/>\nЕсли человек является администратором группы, но в блоке «Контакты» этого не указано, то скрипт этого узнать не сможет.</div>\n            <label htmlFor='textarea'>Список адресов сообществ по 1 ссылке на строку</label>\n            <textarea id='textarea' name='textarea' className={`${classes.textarea} HERE IS THE STYLE IF ERROR`}\n                onChange={(e)=>{\n                    changeState(e.target.value.split('\\n'))\n                }}\n            />\n            <label>\n                <input type ='checkbox' \n                onChange={()=>{setShowAdv(prevState=>!prevState)}}\n                \n            />\n            ID вида 12345 — для рекламного кабинета ВК\n            </label>\n            \n                \n            \n                {isLoading? null : \n                    <button className={classes.button} onClick={()=>start()} >Поиск</button>\n                }\n                \n                 {isLoading ?   \n                    <div className={loader.loader}></div> : null\n                    \n                }\n            \n                {output.length === 0 || isLoading ? \n                    null :\n                    <>\n                    <br></br>\n                    <label>Найдено адмиинистраторов: {output.length}</label>\n                    <div className={classes.output}>\n                    {/* <CopyButton output={showcrosses()} /> */}\n                    {output.map((obj, index)=>{\n                        if (showAdv) {\n                            return (\n                                <div key={index} >\n                                    {obj.user_id}\n                                </div>\n                            )\n                        } else {\n                            return (\n                                <div key={index} >\n                                   https://vk.com/id{obj.user_id}\n                                </div>\n                            )\n                        }\n                        \n                    })}\n                    </div>\n                    </>\n                }\n\n            \n        </div>\n    )\n}\n\nexport default GroupsAdmins","import React, { useState } from 'react'\nimport classes from './PostsParse.module.scss'\nimport CopyButton from '../ui/CopyButton/CopyButton'\nimport VK from '../VK/VK'\nimport Select from 'react-select'\nimport {dropdownStyle} from '../style/style'\nimport loader from '../ui/loader/loader.module.scss'\n\n\nexport const PostsParse = () =>{\n    document.title = 'Парс постов со стены'\n\n    const [groups, setGroups] = useState([])\n    const [deep, setDeep] = useState(100)\n    const [output, setOutput] = useState([])\n    const [filter, setFilter] = useState('all')\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    const selectOptions = [\n        {value: 'owner', label: 'Записи владельца стены'},\n        {value: 'others', label: 'Записи не от владельца стены'},\n        {value: 'all', label: 'Все записи на стене'},\n    ]\n\n\n    const startParse = async () => {\n        if (groups.length > 0){\n            if (output.length === 0) {\n                setIsLoading(true) \n                let result = await VK.getGroupPosts(groups, {count: deep, filter: 'all'})\n                setOutput(result)\n                setIsLoading(false)  \n            } else {\n                setOutput([])\n                setIsLoading(true) \n                let result = await VK.getGroupPosts(groups, {count: deep, filter: 'all'})\n                setOutput(result)\n                setIsLoading(false) \n            }\n        } else {\n            alert('Пустой запрос')\n        }\n       \n    }\n\n    return(\n        <div className={classes.main} >\n            <div className={classes.description} >\n                Скрипт перебирает сообщества и собирает посты со стен сообществ\n            </div>\n            <div>\n                <textarea className={classes.textarea}\n                    placeholder='Вставьте список адресов сообществ'\n                    onChange={(e)=>{\n                        setGroups(e.target.value.split('\\n'))\n                    }}\n                />\n                <label className={classes.labelSelect}>Чьи записи собирать:\n                    <Select\n                    styles={dropdownStyle}\n                    options={selectOptions}\n                    value={selectOptions.filter((obj)=>(obj.value === filter))[0]}\n                    onChange={selectedOption=>setFilter(selectOptions.value)}\n                    />\n                </label>\n                <label>Собирать постов со стены группы  \n                <input \n                    type='number'\n                    min={1}\n                    max={100}\n                    value={deep}\n                    onChange={e=>setDeep(e.target.value)}\n                    \n                />\n                </label>\n                <div>\n                    <button className={classes.button}\n                        onClick={startParse}\n                    >Собрать посты</button>\n                </div>\n\n                <div>\n                    {isLoading ? <div className={loader.loader} /> : null}\n                    {output.length > 0 && !isLoading ?\n                    <div>\n                        <h3>Собрано постов: {output.length}</h3>\n                        <div className={classes.output}>\n                        <CopyButton output={output} />\n                        {output.map((item, index)=>{\n                            return(<div key={`${index}`}>{item}</div>)\n                        })}    \n                        </div>\n                    </div>\n                    :\n                    null\n                    }\n                </div>\n            </div>\n\n        </div>\n    )\n\n}","import React, { useState } from 'react'\nimport classes from './Filter.module.scss'\nimport { FaPlus, FaMinus } from 'react-icons/fa';\n\n\nexport const Filter = (props) => {\n\n    const [enable, setEnable] = useState(false)\n\n    return (\n        <div className={classes.filter}>\n        <div className={classes.titleblock}>\n            <div className={classes.add} onClick={()=>{\n                setEnable(!enable)\n                if (!enable) {\n                    props.addFilter(props.name)\n                } else {\n                    props.delFilter(props.name)\n                }\n                }}>\n                {enable ? <FaMinus className={classes.plus}/> : <FaPlus className={classes.plus}/>}\n            </div>\n            <span>Фильтр по {props.title}</span>\n                \n        </div>\n        {enable ?\n         <div className={classes.children} >\n            {props.children}\n        </div>\n        :\n        null\n        }\n        \n        </div>\n    )\n}","export const selectRelationOptions = [\n    {value: 0, label: 'Не указано'},\n    {value: 1, label: 'Не женат/не замужем'},\n    {value: 2, label: 'Есть друг/есть подруга'},\n    {value: 3, label: 'Помолвлен/помолвлена'},\n    {value: 4, label: 'Женат/замужем'},\n    {value: 5, label: 'Всё сложно'},\n    {value: 6, label: 'В активном поиске'},\n    {value: 7, label: 'Влюблён/влюблена'},\n    {value: 8, label: 'В гражданском браке'},\n\n]","import React, { useState } from 'react'\nimport classes from './UsersFilter.module.scss'\nimport styles from '../style/style.module.scss'\nimport {dropdownStyle} from '../style/style'\nimport {Filter} from './Filters/Filter/Filter'\nimport CountrySelect from '../ui/CoutrySelect/CountrySelect'\nimport CitySelect from '../ui/CitySelect/CitySelect'\nimport VK from '../VK/VK' \nimport {selectRelationOptions} from './selectOptions'\nimport Select from 'react-select';\nimport CopyButton from '../ui/CopyButton/CopyButton'\nimport loader from '../ui/loader/loader.module.scss'\n\nexport const UsersFilter = () => {\n    document.title = 'Фильтр пользователей по параметрам'\n\n    const [users, setUsers] = useState([])\n    const [status, setStatus] = useState('')\n    const [filterStatus, setFilterStatus] = useState('')\n    const [output, setOutput] = useState([])\n    const [isLoading, setIsLoading] = useState(false)\n\n\n    //ФИЛЬТРЫ\n    const [filtersList, setFiltersList] = useState([])\n    const [sexFilter, setSexFilter] = useState(0)\n    const [minAgeFilter, setMinAgeFilter] = useState(0)\n    const [maxAgeFilter, setMaxAgeFilter] = useState(99)\n    const [countryFilter, setCountryFilter] = useState('')\n    const [cityFilter, setCityFilter] = useState('')\n    const [relationFilter, setRelationFilter] = useState([])\n    const [eduFilter, setEduFilter] = useState('')\n    const [minFollowersFilter, setMinFollowersFilter] = useState(0)\n    const [maxFollowersFilter, setMaxFollowersFilter] = useState(0)\n    const [canWriteFilter, setCanWriteFilter] = useState(1)\n    const [isClosedFilter, setIsClosedFilter] = useState(false)\n\n    \n\n    const startFilter = async () =>{\n      if (users.length > 0) {\n        setStatus('')\n        setFilterStatus('')\n        setOutput([])\n        setIsLoading(true)\n          let filters = {\n            sexFilter,\n            minAgeFilter,\n            maxAgeFilter,\n            countryFilter,\n            cityFilter,\n            relationFilter,\n            eduFilter,\n            minFollowersFilter,\n            maxFollowersFilter,\n            canWriteFilter,\n            isClosedFilter,\n          }\n\n          let result = await VK.getUsers(users, filtersList, filters, statusUpdater, filterStatusUpdater)\n          setOutput(result)\n          setIsLoading(false)\n      } \n        \n    }\n\n    const statusUpdater = num => {\n        setStatus(`${num}`)\n    }\n\n    const filterStatusUpdater = num => {\n        setFilterStatus(`${num}`)\n    }\n\n    const addFilter = filterName => {\n        setFiltersList(filtersList.concat(filterName))\n    }\n\n    const delFilter = filterName => {\n        setFiltersList(filtersList.filter((elem)=>elem !== filterName))\n    }\n\n    const outputRender = \n      <div className={styles.output}>\n      <CopyButton output={output.map(usr=>'https://vk.com/'+usr.screen_name)} />\n          {output.map(usr=>{\n            return (\n              <div\n                key={usr.id}\n              >\n                https://vk.com/{usr.screen_name}\n              </div>\n            )\n          })}\n      </div>\n    \n\n    return (\n      <div className={classes.main}>\n        <div className={styles.description}>\n          Скрипт фильтрует пользователей по параметрам.\n        </div>\n\n        <textarea\n          className={styles.textarea}\n          placeholder=\"Вставьте список адресов пользователей\"\n          onChange={(e) => {\n            setUsers(e.target.value.split(\"\\n\"));\n          }}\n        />\n\n        <Filter //ПО ПОЛУ 'sexFilter'\n          title=\"полу\"\n          name=\"sexFilter\"\n          addFilter={addFilter}\n          delFilter={delFilter}\n        >\n          <label className={classes.radiolabel}>\n            <input type=\"radio\" name=\"sex\" onChange={() => setSexFilter(2)} />\n            Только мужчины\n          </label>\n          <label className={classes.radiolabel}>\n            <input type=\"radio\" name=\"sex\" onChange={() => setSexFilter(1)} />\n            Только женщины\n          </label>\n        </Filter>\n\n        <Filter //ПО ВОЗРАСТУ 'ageFilter'\n          title=\"возрасту\"\n          name=\"ageFilter\"\n          addFilter={addFilter}\n          delFilter={delFilter}\n        >\n          <label className={classes.numLabel}>\n            От\n            <input\n              type=\"number\"\n              onChange={(e) => setMinAgeFilter(+e.target.value)}\n              value={minAgeFilter}\n            />\n            лет\n          </label>\n\n          <label className={classes.numLabel}>\n            До\n            <input\n              type=\"number\"\n              onChange={(e) => setMaxAgeFilter(+e.target.value)}\n              value={maxAgeFilter}\n            />\n            лет\n          </label>\n        </Filter>\n\n        <Filter //ПО МЕСТОПОЛОЖЕНИЮ 'geoFilter'\n          title=\"местоположению\"\n          name=\"geoFilter\"\n          addFilter={addFilter}\n          delFilter={delFilter}\n        >\n          <CountrySelect\n            onSelect={(selectedValue) => {\n              setCountryFilter(selectedValue.value);\n              setCityFilter(\"\");\n            }}\n            country_id={countryFilter}\n          />\n          <br />\n          {countryFilter ? (\n            <CitySelect\n              onSelect={(selectedValue) => {\n                setCityFilter(selectedValue.value);\n              }}\n              country_id={countryFilter}\n              city_id={cityFilter}\n            />\n          ) : null}\n        </Filter>\n\n        <Filter //ПО СЕМЕЙНОМУ ПОЛОЖЕНИЮ 'relationFilter'\n          title=\"семейному положению\"\n          name=\"relationFilter\"\n          addFilter={addFilter}\n          delFilter={delFilter}\n        >\n          <span>Выберите один или несколько вариантов</span>\n          <Select\n            //defaultValue={selectRelationOptions[0]}\n            styles={dropdownStyle}\n            isMulti\n            options={selectRelationOptions}\n            value={relationFilter.map(\n              (val) =>\n                selectRelationOptions.filter((obj) => obj.value === val)[0]\n            )}\n            onChange={(selectedValue) => {\n              if (selectedValue) {\n                setRelationFilter(selectedValue.map((val) => val.value));\n              } else {\n                setRelationFilter([]);\n              }\n            }}\n          />\n        </Filter>\n\n        <Filter //ПО ОБРАЗОВАНИЮ 'eduFilter'\n          title=\"по слову в названии ВУЗа, факультета, специальности\"\n          name=\"eduFilter\"\n          addFilter={addFilter}\n          delFilter={delFilter}\n        >\n          <input\n            className={styles.textinput}\n            type=\"text\"\n            value={eduFilter}\n            onChange={(e) => setEduFilter(e.target.value)}\n            placeholder='Например, МГУ'\n          />\n        </Filter>\n        \n        <Filter //ПО КОЛИЧЕСТВУ ПОДПИСЧИКОВ 'ageFilter'\n          title=\"количеству подписчиков\"\n          name=\"followersFilter\"\n          addFilter={addFilter}\n          delFilter={delFilter}\n        >\n          <label className={classes.numLabel}>\n            От\n            <input\n              type=\"number\"\n              onChange={(e) => setMinFollowersFilter(+e.target.value)}\n              value={minFollowersFilter}\n            />\n          </label>\n\n          <label className={classes.numLabel}>\n            До\n            <input\n              type=\"number\"\n              onChange={(e) => setMaxFollowersFilter(+e.target.value)}\n              value={maxFollowersFilter}\n            />\n          </label>\n        </Filter>\n       \n        <Filter //ПО ОТКРЫТЫМ ЛИЧНЫМ СООБЩЕНИЯМ 'sexFilter'\n          title=\"открытым сообщениям\"\n          name=\"canWriteFilter\"\n          addFilter={addFilter}\n          delFilter={delFilter}\n        >\n          <label className={classes.radiolabel}>\n            <input type=\"radio\" name=\"canWrite\" onChange={() => setCanWriteFilter(0)} />\n            Нельзя отправлять личные сообщения\n          </label>\n          <label className={classes.radiolabel}>\n            <input type=\"radio\" name=\"canWrite\" onChange={() => setCanWriteFilter(1)} />\n            Можно отправлять личные сообщения\n          </label>\n        </Filter>\n        \n        <Filter //ОТКРЫТОМУ ПРОФИЛЮ 'sexFilter'\n          title=\"открытому профилю\"\n          name=\"isClosedFilter\"\n          addFilter={addFilter}\n          delFilter={delFilter}\n        >\n          <label className={classes.radiolabel}>\n            <input type=\"radio\" name=\"isClosedFilter\" onChange={() => setIsClosedFilter(false)} />\n            Только открытые профили\n          </label>\n          <label className={classes.radiolabel}>\n            <input type=\"radio\" name=\"isClosedFilter\" onChange={() => setIsClosedFilter(true)} />\n            Только закрытые профили\n          </label>\n        </Filter>\n       \n        <button className={styles.button} onClick={startFilter}>\n          Фильтровать пользователей\n        </button>\n        \n        {status ? <span>Пользователей собрано: {status}</span> : null }\n        {filterStatus ? <span>Пользователей отфильтровано: {filterStatus}</span> : null}\n\n        {isLoading ? <div className={loader.loader} />  : null}\n        \n        {output.length > 0 ? outputRender : null}\n        </div>\n    );\n}","import React, {useState} from 'react'\nimport classes from './ParsePostActivity.module.scss'\nimport styles from '../style/style.module.scss'\nimport VK from '../VK/VK'\nimport loader from '../ui/loader/loader.module.scss'\n\nexport const ParsePostActivity = () => {\n\n    const [post, setPost] = useState([])\n    const [activities, setActivities] = useState(['likes'])\n    const [activitiesCount, setActivitiesCount] = useState(1)\n\n    const [output, setOutput] = useState([])\n    const [loading, setLoading] = useState(false)\n\n\n\n    const start = async () => {\n      if (post.length > 0) {\n        if (output.length > 0) {\n          setOutput([])\n        }\n\n        setLoading(true)\n        let out = await VK.parsePostsActivity(post, activities, activitiesCount)\n        console.log('out', out)\n        setOutput(out)\n        setLoading(false)\n      }\n      \n    }\n\n\n    const outRender = (\n      <div className={styles.output} >\n        {output ? output.map((id,index)=><div key={index} >https://vk.com/id{id}</div>) : null}\n      </div>\n    )\n\n    return (\n      <div className={styles.main}>\n        <div className={styles.description}>\n          Скрипт находит всех людей, оставивших лайки/репосты/комментарии к\n          одному посту. Потом создаёт из них финальный список под ваши условия\n        </div>\n\n        <textarea\n          className={styles.textarea}\n          placeholder=\"Вставьте ссылку на пост\"\n          onChange={(e) => {\n            setPost(e.target.value.split(\"\\n\"));\n          }}\n        />\n\n        <div className={classes.settings}>\n          <h5>Какую активность собирать?</h5>\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={activities.includes(\"likes\")}\n              onChange={() =>\n                activities.includes(\"likes\")\n                  ? setActivities(activities.filter((el) => el !== \"likes\"))\n                  : setActivities(activities.concat(\"likes\"))\n              }\n            />\n            Лайки\n          </label>\n\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={activities.includes(\"reposts\")}\n              onChange={() =>\n                activities.includes(\"reposts\")\n                  ? setActivities(activities.filter((el) => el !== \"reposts\"))\n                  : setActivities(activities.concat(\"reposts\"))\n              }\n            />\n            Репосты\n          </label>\n\n          {/* <label>\n            <input\n              type=\"checkbox\"\n              checked={activities.includes(\"quiz\")}\n              onChange={() =>\n                activities.includes(\"quiz\")\n                  ? setActivities(activities.filter((el) => el !== \"quiz\"))\n                  : setActivities(activities.concat(\"quiz\"))\n              }\n            />\n            Участвовавшие в опросе\n          </label> */}\n\n          <label>\n            <input\n              type=\"checkbox\"\n              checked={activities.includes(\"authors\")}\n              onChange={() =>\n                activities.includes(\"authors\")\n                  ? setActivities(activities.filter((el) => el !== \"authors\"))\n                  : setActivities(activities.concat(\"authors\"))\n              }\n            />\n            Авторы постов\n          </label>\n\n\n          <div>\n            <h5>Количество активностей</h5>\n            <span>Собирать людей сделавших не менее </span>\n            <input\n              type=\"number\"\n              className={styles.textinput + \" \" + classes.inputNumber}\n              onChange={e=>setActivitiesCount(+e.target.value)}\n              value={activitiesCount}\n              min='1'\n            />\n            <span> активностей</span>\n          </div>\n        </div>\n\n        <button \n            className={styles.button}\n            onClick={start}\n            >Начать сбор</button>\n\n        {}\n        {loading ? <div className={loader.loader}/> : null}\n        { output && output.length === 0 ? null : <span>Собрано {output.length} пользователей</span>}\n        { output && output.length === 0 ? null : outRender}\n        \n      </div>\n    );\n}","import React, { useState, useEffect } from 'react'\nimport classes from './NavBar.module.scss'\nimport { FaUsers, FaUser, FaChevronDown, FaHeart, FaChevronUp } from 'react-icons/fa';\nimport { NavLink } from 'react-router-dom'\nimport useOnclickOutside from \"react-cool-onclickoutside\";\n\nconst NavBar = () => {\n\n    const [showGroups, setShowGroups] = useState(false)\n    const [showUsers, setShowUsers] = useState(false)\n    const [showOthers, setShowOthers] = useState(false)\n\n\n    const ref = useOnclickOutside(() => {\n        setShowGroups(false);\n        setShowUsers(false)\n        setShowOthers(false)\n      });\n\n    \n\n    const groupsOptions = (\n        <div \n            className={classes.options}\n            ref={ref}\n            onClick={()=>setShowGroups(false)}\n        >\n            <NavLink className={classes.NavLink} to='/groupssearch'>\n                Поиск групп по параметрам\n            </NavLink>\n            <NavLink className={classes.NavLink} to='/groupscanpost'>\n                Сортировка групп по открытой стене\n            </NavLink>\n            <NavLink className={classes.NavLink} to='/parsgroupmembers'>\n                Все участники групп\n            </NavLink>\n            <NavLink className={classes.NavLink} to='/groupscross'>\n                Состоящие в нескольких группах\n            </NavLink>\n            <NavLink className={classes.NavLink} to='/groupsadmins'>\n                Администраторы групп\n            </NavLink>\n            <NavLink className={classes.NavLink} to='/postsparse'>\n                Парс постов со стены сообщества\n            </NavLink>\n\n        </div>\n    )\n\n    const usersOptions = (\n        <div \n            className={classes.options}\n            ref={ref}\n            onClick={()=>setShowUsers(false)}\n        >\n            <NavLink className={classes.NavLink} to='/usersfilter'>\n                Фильтр пользователей по параметрам\n            </NavLink>\n\n        </div>\n\n    )\n\n    const othersOptions = (\n        <div \n        className={classes.options}\n        ref={ref}\n        onClick={()=>setShowOthers(false)}\n    >\n         <NavLink className={classes.NavLink} to='/parspostactivity'>\n          Собрать всю активность с поста\n        </NavLink>\n\n    </div>\n    )\n\n\n    return (\n        <div className={classes.NavBar} >\n            <div className={classes.buttonWraper} >\n                 <div className={classes.button}\n                    ref={ref}\n                    onClick={()=>{\n                        setShowGroups(!showGroups)\n                        setShowUsers(false)\n                        setShowOthers(false)\n                    }}\n                    >\n                    <FaUsers className={classes.icon} />\n                    <span >Сообщества</span>\n                    {showGroups ? \n                    <FaChevronUp className={classes.icon}/>\n                    :\n                    <FaChevronDown className={classes.icon}/>\n\n                    }\n                </div>\n\n                {showGroups ? groupsOptions : null}\n            </div>\n           \n            <div className={classes.buttonWraper} >\n                <div \n                    className={classes.button}\n                    ref={ref}\n                    onClick={()=>{\n                        setShowUsers(!showUsers)\n                        setShowGroups(false)\n                        setShowOthers(false)\n                    }}\n                    >\n                    <FaUser className={classes.icon} />\n                    <span >Пользователи</span>\n                    {showUsers ? \n                    <FaChevronUp className={classes.icon}/>\n                    :\n                    <FaChevronDown className={classes.icon}/>\n                    }                </div>\n                {showUsers ? usersOptions : null}\n            </div>\n\n            <div className={classes.buttonWraper} >\n                <div \n                    ref={ref}\n                    className={classes.button}\n                    onClick={()=>{\n                        setShowOthers(!showOthers)\n                        setShowUsers(false)\n                        setShowGroups(false)\n                    }}\n                    >\n                    <FaHeart className={classes.icon} />\n                    <span >Сбор активности</span>\n                    {showOthers ? \n                    <FaChevronUp className={classes.icon}/>\n                    :\n                    <FaChevronDown className={classes.icon}/>\n                    }\n                </div>\n                {showOthers ? othersOptions : null}\n\n            </div>\n\n        </div>\n    )\n}\n\nconst clickOutsideConfig = {\n    handleClickOutside: () => NavBar.handleClickOutside\n};\n\nexport default NavBar\n\n","import React from 'react'\nimport classes from './Description.module.scss'\nimport { FaUserFriends, FaFilter } from \"react-icons/fa\";\nimport { AiOutlineUsergroupAdd, AiOutlineAim, AiOutlineHeart } from \"react-icons/ai\";\nimport { RiUserSearchLine } from \"react-icons/ri\";\n\n\n\n\nexport const Description = () => {\n\n\n\n    return (\n      <div className={classes.main}>\n        <p className={classes.description} >\n          VK SMM TOOLS - это мощный и быстрый сервис для парсинга аудитории ВК. Сервис все еще развивается, но вот что он умеет\n          уже сейчас:\n        </p>\n\n        <div className={classes.cards}>\n          <div className={classes.card}>\n            <div className={classes.icon}>\n              <FaUserFriends />\n            </div>\n            <h4>Поиск сообществ по параметрам.</h4>\n            <span>\n              Поможет собрать группы с целевой аудиторией или группы\n              конкурентов.\n            </span>\n          </div>\n\n          <div className={classes.card}>\n            <div className={classes.icon}>\n              <FaFilter />\n            </div>\n            <h4>Фильтр сообществ по открытой стене</h4>\n            <span>Для самых различных целей.</span>\n          </div>\n\n          <div className={classes.card}>\n            <div className={classes.icon}>\n              <AiOutlineUsergroupAdd />\n            </div>\n            <h4>Парсинг участников сообществ</h4>\n            <span>\n              Меньше чем за минуту скрипт соберет десятки тысяч пользователей\n            </span>\n          </div>\n\n          <div className={classes.card}>\n            <div className={classes.icon}>\n              <AiOutlineAim />\n            </div>\n            <h4>Пересечения сообществ</h4>\n            <span>\n              Для того чтобы найти ЦА, которая точно заинтересована в этой нише\n            </span>\n          </div>\n\n          <div className={classes.card}>\n            <div className={classes.icon}>\n              <RiUserSearchLine />\n            </div>\n            <h4>Фильтр пользователей по параметрам</h4>\n            <span>\n              Фильтр по возрасту, месту жительства, СП, образованию и тд.\n            </span>\n          </div>\n\n          <div className={classes.card}>\n            <div className={classes.icon}>\n              <AiOutlineHeart />\n            </div>\n            <h4>Сбор активности с постов</h4>\n            <span>\n              Соберите всех лайкнувших, репостнувших, а так же авторов постов.\n            </span>\n          </div>\n\n\n\n        </div>\n      </div>\n    );\n}","import React from 'react';\nimport classes from './App.module.scss';\nimport {GroupsSearch} from './GroupsSearch/GroupsSearch';\nimport { Route, Switch, NavLink } from 'react-router-dom'\nimport GropsCanPost from './GroupsCanPost/GroupsCanPost';\nimport BroBotList from './BroBotList/BroBotList'\nimport ParsGroupMembers from './ParsGroupMembers/ParsGroupMembers';\nimport GroupsCross from './GroupsCross/GroupsCross'\nimport GroupsAdmins from './GroupsAdmins/GroupsAdmins'\nimport {PostsParse} from './PostsParse/PostsParse'\nimport {UsersFilter} from './UsersFilter/UsersFilter'\nimport {ParsePostActivity} from './ParsePostActivity/ParsePostActivity'\nimport NavBar from './ui/NavBar/NavBar'\nimport {Description} from './Description/Description'\n\nexport default class App extends React.Component {\n\n  state = {\n    loginStatus: 'unknow', \n  }\n\n  authVk() {\n    window.VK.Auth.login(()=>{console.log('logged')})\n  }\n\n  componentDidMount() {\n    window.VK.Auth.getLoginStatus((data)=>{\n      this.setState({loginStatus:data.status})\n    })}\n\n\n\n  render() {\n\n\n    return (\n      <div className={classes.App}>\n\n      <div className={classes.logo}>\n        <img src='logo.png' width='40px'/>\n        <h1>VK SMM TOOLS</h1>\n      </div>\n      \n       \n      \n      {this.state.loginStatus === 'connected' ? \n      <nav>\n        <NavBar />\n\n      </nav> :\n      <button className={classes.LoginButton} onClick={this.authVk}>Войти VK</button>\n\n      }\n      \n\n      {this.state.loginStatus == 'connected' ? <Switch>\n        <Route path='/groupssearch' component={GroupsSearch} exact />\n        <Route path='/groupscanpost' component={GropsCanPost} exact />\n        <Route path='/brobotlist' component={BroBotList} exact />\n        <Route path='/parsgroupmembers' component={ParsGroupMembers} exact />\n        <Route path='/groupscross' component={GroupsCross} exact />\n        <Route path='/groupsadmins' component={GroupsAdmins} exact />\n        <Route path='/postsparse' component={PostsParse} exact />\n        <Route path='/usersfilter' component={UsersFilter} exact />\n        <Route path='/parspostactivity' component={ParsePostActivity} exact />\n        <Route path='/' component={GroupsSearch} exact />\n\n\n\n        {/* <Route path='/' component={GroupsSearch} exact /> */}\n      </Switch>\n      : < Description />\n      }\n      \n    \n      \n      </div>\n    );\n\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter } from 'react-router-dom'\n\n// window.vkAsyncInit = function() {\n//     VK.init({\n//       apiId: 7201674,\n//     });\n//   };\n\n//   setTimeout(function() {\n//     var el = document.createElement(\"script\");\n//     el.type = \"text/javascript\";\n//     el.src = \"https://vk.com/js/api/openapi.js?162\";\n//     el.async = true;\n//     document.getElementById(\"vk_api_transport\").appendChild(el);\n\n//   }, 0);\n\ndocument.title='VK SMM TOOLS'\n\nlet script = document.createElement('script')\nscript.src = \"https://vk.com/js/api/openapi.js?162\"\ndocument.head.append(script)\n\nscript.onload = function() {\n    window.VK.init({\n        apiId: 7201674,\n    });\n\n    ReactDOM.render(app, document.getElementById('root'));\n}\n\n\n\nconst app = (\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n)\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}